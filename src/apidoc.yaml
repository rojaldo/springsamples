openapi: 3.0.2
info:
  title: Samples API for Spring Boot course
  description: |-
    This is a documentation of the API for the Spring Boot for several endpoints:
    - /api/v1/beers
    - /api/v1/store/customers
    - /api/v1/store/books

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
    - [The Punk API documentation](https://punkapi.com/documentation/v2)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.16
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: https://petstore.swagger.io/v2
    description: Production server
tags:
  - name: beers
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: https://punkapi.com/documentation/v2
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /beers:
    get:
      tags:
        - beers
      summary: List all beers
      description: Returns a list of all beers in the database.
      operationId: listBeers
      parameters:
        - name: page
          in: query
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: The number of items to retrieve per page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beers'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    put:
      tags:
        - beers
      summary: Update an existing beer
      description: Update an existing beer by ID, that is already in the database, and the ID is specified in the path.
      operationId: updatePet
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongId'
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    post:
      tags:
        - beers
      summary: Add a new beer to the store
      description: Add a new beer to the store by ID, that is already in the database, and the ID is specified in the path.
      operationId: addBeer
      requestBody:
        description: Add a new beer to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBeer'
        required: true
      responses:
        '201':
          description: Beer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongId'
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    delete:
      tags:
        - beers
      summary: Deletes a beer
      description: Deletes a beer by ID, that is already in the database, and the ID is specified in the path.
      operationId: deleteBeers
      parameters:
        - name: abv_lt
          in: query
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            format: float
        - name: abv_gt
          in: query
          description: The number of items to retrieve per page
          required: false
          schema:
            type: integer
            format: float
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongId'
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  /beers/{beerId}:
    get:
      tags:
        - beers
      summary: Find beer by ID
      description: Returns a single beer
      operationId: getBeerById
      parameters:
        - name: beerId
          in: path
          description: ID of beer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongId'
        '404':
          description: Beer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
    delete:
      tags:
        - beers
      summary: Deletes a beer
      description: Deletes a beer by ID, that is already in the database, and the ID is specified in the path.
      operationId: deleteBeerById
      parameters:
        - name: beerId
          in: path
          description: ID of beer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerRemovedMessage'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongId'
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        '500':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInternal'
  
components:
  schemas:
    Beer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Buzz
        tagline:
          type: string
          example: A Real Bitter Experience.
        first_brewed:
          type: string
          example: 09/2007
        description:
          type: string
          example: A light, crisp and bitter IPA brewed with English and American hops. A small batch brewed only once.
        image_url:
          type: string
          example: https://images.punkapi.com/v2/keg.png
        abv:
          type: number
          format: float
          example: 4.5
        ibu:
          type: number
          format: float
          example: 3
        ebc:
          type: number
          format: float
          example: 20
    Beers:
      type: array
      items:
        $ref: '#/components/schemas/Beer'
      example:
        - id: 1
          name: Buzz
          tagline: A Real Bitter Experience.
          first_brewed: 09/2007
          description: A light, crisp and bitter IPA brewed with English and American hops. A small batch brewed only once.
          image_url: https://images.punkapi.com/v2/keg.png
          abv: 4.5
          ibu: 60
          ebc: 20
        - id: 2
          name: Trashy Blonde
          tagline: You Know You Shouldn't
          first_brewed: 04/2008
          description: Post Modern Classic. Spiky. Tropical. Hoppy.
          image_url: https://images.punkapi.com/v2/2.png
          abv: 4.1
          ibu: 41
          ebc: 15
    ErrorWrongId:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: Invalid ID supplied
    ErrorNotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Beer not found
    ErrorInternal:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Internal server error
    NewBeer:
      type: object
      properties:
        name:
          type: string
          example: Buzz
        tagline:
          type: string
          example: A Real Bitter Experience.
        first_brewed:
          type: string
          example: 09/2007
        description:
          type: string
          example: A light, crisp and bitter IPA brewed with English and American hops. A small batch brewed only once.
        image_url:
          type: string
          example: https://images.punkapi.com/v2/keg.png
        abv:
          type: number
          format: float
          example: 4.5
        ibu:
          type: number
          format: float
          example: 3
        ebc:
          type: number
          format: float
          example: 20
    BeerRemovedMessage:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 204
        message:
          type: string
          example: Beer removed successfully
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
